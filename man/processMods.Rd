% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/processMods.R
\name{processMods}
\alias{processMods}
\alias{processMods,QFeatures,list-method}
\alias{processMods,SummarizedExperiment,list-method}
\title{Process Histone Modifications}
\usage{
processMods(
  object,
  msa,
  ...,
  mod_format = c("progenesis", "progenesis_sw"),
  unmods = c("K"),
  strip_mods = list(Propionyl = c("K", "N-term")),
  rename_mods = NULL
)

\S4method{processMods}{QFeatures,list}(
  object,
  msa,
  i,
  mod_format = c("progenesis", "progenesis_sw"),
  unmods = c("K"),
  strip_mods = list(Propionyl = c("K", "N-term")),
  rename_mods = NULL
)

\S4method{processMods}{SummarizedExperiment,list}(
  object,
  msa,
  mod_format = c("progenesis", "progenesis_sw"),
  unmods = c("K"),
  strip_mods = list(Propionyl = c("K", "N-term")),
  rename_mods = NULL
)
}
\arguments{
\item{object}{The \code{QFeatures} or \code{SummarizedExperiment} object in which the
mods should be processed.}

\item{msa}{A \code{list()} of \code{AAStringSetList} objects containing unaligned,
aligned, and optionally reference histone sequences. Each \code{AAStringSetList}
element contains sequences of one histone family. For example, the
(default) result from \code{\link[=alignHistones]{alignHistones()}}.}

\item{...}{Additional arguments passed to specific methods.}

\item{mod_format}{The format of the modification string. Defaults to
\code{"progenesis"}. Must be one of:
\itemize{
\item \code{"progenesis"} = "[loc] mod (aa)|..."
\item \code{"progenesis_sw"} = "[loc] (aa) mod|..."
}}

\item{unmods}{A \code{character()} of amino acids to which "Unmod" pseudo-hPTMs
should be added. Optional, \code{NULL} disables adding unmods.}

\item{strip_mods}{A named \code{list(mod1 = character("aa1", ...), ...)} of
modifications to strip. Optional, \code{NULL} disables stripping mods.}

\item{rename_mods}{A \code{list()} of two-sided formulas where the LHS is the old
name and the RHS the new name (e.g., \code{"old" ~ "new"}) specifying how to
rename hPTMs. Optional.}

\item{i}{The index (\code{integer()}) or name (\code{character()}) of the assay(s) to be processed.}
}
\value{
A \code{QFeatures} or \code{SummarizedExperiment} (same as supplied) with the rowData
containing four new columns, where each column differs in the locations of
hPTMs:
\itemize{
\item "mods_pep" = location within peptide
\item "mods_var" = location within histone variant(s)
\item "mods_msa" = location within histone variant(s) after multiple sequence alignment (see \code{\link[=alignHistones]{alignHistones()}})
\item "mods_ref" = corresponding location within the aligned reference sequence (see \code{\link[=alignHistones]{alignHistones()}}), only when \code{msa} contains "msa_ref"
}

One additional column is added: "precursor", which is the ProForma combination of
sequence, mods, and charge.
}
\description{
hPTMs are rewritten in a common format ("aa|loc|mod;..."), for example
"K|27|Me3;K|36|Ac;K|37|Unmod". This involves mapping the hPTM location from
within a peptide to the matching histone variant(s). It also allows to add
"Unmod" pseudo-hPTMs, remove uninformative hPTMs (e.g., propionylation from
chemical derivatization), and rename hPTMs (e.g., from "Trimethyl" to "Me3").
}
\examples{
qf <- matchHistones(ncbtoy, aligned_histones$unaligned, 1)

# in this dataset, mods follow the "progenesis_sw" format
processMods(qf, aligned_histones, 1, mod_format = "progenesis_sw")

# "Unmod" can be added to other amino acids and we can remove chemical artifacts
processMods(
  qf,
  aligned_histones,
  1,
  mod_format = "progenesis_sw",
  unmods = c("K", "R"),
  strip_mods = list(Fo = c("K"))
)

# maybe we would like to write out hPTMs in full
processMods(
  qf,
  aligned_histones,
  1,
  mod_format = "progenesis_sw",
  rename_mods = list("Ac" ~ "Acetyl", "Me2" ~ "Dimethyl", "Me3" ~ "Trimethyl")
)
se <- matchHistones(ncbtoy[[1]], aligned_histones$unaligned)

# in this dataset, mods follow the "progenesis_sw" format
processMods(se, aligned_histones, mod_format = "progenesis_sw")

# "Unmod" can be added to other amino acids and we can remove chemical artifacts
processMods(
  se,
  aligned_histones,
  mod_format = "progenesis_sw",
  unmods = c("K", "R"),
  strip_mods = list(Fo = c("K"))
)

# maybe we prefer to write out hPTMs in full
processMods(
  se,
  aligned_histones,
  mod_format = "progenesis_sw",
  rename_mods = list("Ac" ~ "Acetyl", "Me2" ~ "Dimethyl", "Me3" ~ "Trimethyl")
)
}
